plugins {
	id 'java'
	id 'jacoco'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id "com.diffplug.spotless" version "7.0.3"
}

group = 'com.andsamp.branch'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.retry:spring-retry:2.0.12'
	implementation 'org.springframework:spring-aspects:6.2.7'
	implementation 'org.hibernate:hibernate-validator:8.0.2.Final'
	compileOnly("org.projectlombok:lombok:1.18.38")
	annotationProcessor("org.projectlombok:lombok:1.18.38")
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testCompileOnly("org.projectlombok:lombok:1.18.38")
	testAnnotationProcessor("org.projectlombok:lombok:1.18.38")
}

spotless {
	java {
		// Use the default importOrder configuration
		importOrder()
		removeUnusedImports()

		// Cleanthat will refactor your code, but it may break your style: apply it before your formatter
		cleanthat()          // has its own section below

		palantirJavaFormat()

		formatAnnotations()  // fixes formatting of type annotations, see below
	}

	format 'dotfiles', {
		target '.gitignore', '.gitattributes', '.editorconfig'
		leadingTabsToSpaces(2)
		trimTrailingWhitespace()
		endWithNewline()
	}
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
	dependsOn test // tests are required to run before generating the report
}
